#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

include debian/xsfbs/xsfbs.mk

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
DEB_HOST_ARCH_OS    ?= $(shell dpkg-architecture -qDEB_HOST_ARCH_OS)

ifeq ($(DEB_BUILD_GNU_TYPE), $(DEB_HOST_GNU_TYPE))
	confflags += --build=$(DEB_HOST_GNU_TYPE)
else
	confflags += --build=$(DEB_BUILD_GNU_TYPE) --host=$(DEB_HOST_GNU_TYPE)
endif
ifeq (linux, $(DEB_HOST_ARCH_OS))
	confflags += --enable-udev
	confflags += --disable-libkms
	LIBKMS = no
	confflags += --disable-vmwgfx-experimental-api
	confflags += --enable-nouveau-experimental-api
	NOUVEAU = yes
	confflags += --enable-radeon
	RADEON = yes
else
	confflags += --disable-udev
	confflags += --disable-libkms
	LIBKMS=no
	confflags += --disable-nouveau-experimental-api
	NOUVEAU = no
	confflags += --disable-radeon
	RADEON = no
endif

# only build libdrm-intel on x86
ifneq (,$(filter amd64 i386,$(DEB_HOST_ARCH_CPU)))
ifneq (,$(filter linux kfreebsd,$(DEB_HOST_ARCH_OS)))
	INTEL = yes
endif
endif

ifeq ($(INTEL), yes)
	confflags += --enable-intel
else
	confflags += --disable-intel
endif

CFLAGS = -Wall -g

ifneq (,$(filter noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif
ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
	NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
	MAKEFLAGS += -j$(NUMJOBS)
endif

configure: $(STAMP_DIR)/patch
	dh_testdir
	autoreconf -vfi

build/config.status: configure
	dh_testdir
	test -d build || mkdir build
	cd build && \
	../configure \
		--prefix=/usr \
		--mandir=\$${prefix}/share/man \
		--infodir=\$${prefix}/share/info \
		--enable-static=yes \
		$(confflags) \
		CFLAGS="$(CFLAGS)"

build: build-stamp
build-stamp: build/config.status
	dh_testdir
	cd build && $(MAKE)
	>$@

clean: xsfclean
	dh_testdir
	dh_testroot
	rm -f build-stamp

	rm -f config.cache config.log config.status
	rm -f */config.cache */config.log */config.status
	rm -f conftest* */conftest*
	rm -rf autom4te.cache */autom4te.cache
	rm -rf build
	rm -f $$(find -name Makefile.in)
	rm -f compile config.guess config.sub configure depcomp install-sh
	rm -f ltmain.sh missing INSTALL aclocal.m4 config.h.in mkinstalldirs
	rm -f libdrm.pc libdrm/config.h.in

	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	cd build && $(MAKE) install DESTDIR=$(CURDIR)/debian/tmp

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir -s
	dh_testroot -s
	dh_installchangelogs -s ChangeLog
	dh_installdocs -s
	dh_installexamples -s
	dh_install -s --sourcedir=debian/tmp -X.la --fail-missing
	dh_link -s
	dh_strip -plibdrm2 --dbg-package=libdrm2-dbg
ifeq ($(INTEL), yes)
	dh_strip -plibdrm-intel1 --dbg-package=libdrm-intel1-dbg
endif
ifeq ($(NOUVEAU), yes)
	dh_strip -plibdrm-nouveau1 --dbg-package=libdrm-nouveau1-dbg
endif
ifeq ($(RADEON), yes)
	dh_strip -plibdrm-radeon1 --dbg-package=libdrm-radeon1-dbg
endif
ifeq ($(LIBKMS), yes)
	dh_strip -p libkms1 --dbg-package=libkms1-dbg
endif
	dh_strip -s --remaining-packages
	dh_compress -s
	dh_fixperms -s
	dh_makeshlibs -plibdrm2 -V'libdrm2 (>= 2.4.17)' -- -c4
ifeq ($(INTEL), yes)
	dh_makeshlibs -plibdrm-intel1 -V'libdrm-intel1 (>= 2.4.21)' -- -c4
endif
ifeq ($(NOUVEAU), yes)
	dh_makeshlibs -plibdrm-nouveau1 -V'libdrm-nouveau1 (>= 2.4.16)' -- -c4
endif
ifeq ($(RADEON), yes)
	dh_makeshlibs -plibdrm-radeon1 -V'libdrm-radeon1 (>= 2.4.20)' -- -c4
endif
ifeq ($(LIBKMS), yes)
	dh_makeshlibs -plibkms1 -V'libkms1' -- -c4
endif
	dh_installdeb -s
	dh_shlibdeps -s
	dh_gencontrol -s
	dh_md5sums -s
	dh_builddeb -s

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install 
